name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
        image_tag:
          description: 'Docker image tag (e.g., strapi-20250722143000)'
          required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set IMAGE_TAG from input
        run: |
          echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Create .env file with all varabies
        run: |
          mkdir -p terraform/docks
          {
            echo "HOST=0.0.0.0"
            echo "PORT=1337"
            
            echo "APP_KEYS=${{ secrets.APP_KEYS }}"
            echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}"
            echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}"
            echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}"
            echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}"
            
            echo "DATABASE_CLIENT=postgres"
            echo "DATABASE_HOST=postgres"
            echo "DATABASE_PORT=5432"
            echo "DATABASE_NAME=strapi"
            echo "DATABASE_USERNAME=strapi"
            echo "DATABASE_PASSWORD=strapi"
            echo "DATABASE_SSL=false"
            echo "JWT_SECRET=DRYhg91+J9AWJPeVLPLrmw==,gnnULHT1Gb8mVGinoo20XA==,jxDmSUT4duG7XWBZmbF+Vw==,VUQykGJOS9lgqqpZiaFQ0Q=="
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
            echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
          } > terraform/docks/.env

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform
      - name: Terraform Plan
        run: terraform plan
        working-directory: Terraform
      - name: Terraform Apply
        run:  terraform apply -auto-approve
        working-directory: Terraform