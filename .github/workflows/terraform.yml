name: CD - Deploy to EC2

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: Terraform

      - name: Get EC2 Public IP from Terraform
        id: tf_output
        run: |
          cd Terraform
          EC2_IP=$(terraform output -raw strapi_public_ip | tr -d '\r')
          echo "ec2_ip=$EC2_IP" >> $GITHUB_OUTPUT

      - name: Deploy container on EC2
        run: |
          IMAGE_TAG=latest
          EC2_USER=ubuntu
          EC2_HOST=${{ steps.tf_output.outputs.ec2_ip }}
          PEM_KEY="${{ secrets.EC2_SSH_KEY }}"

          echo "$PEM_KEY" > key.pem
          chmod 600 key.pem

          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/strapi-app-navya:${IMAGE_TAG}
            docker stop strapi-app-navya || true
            docker rm strapi-app-navya || true
            docker run -d --name strapi-app-navya -p 1337:1337 ${{ secrets.DOCKER_USERNAME }}/strapi-app-navya:${IMAGE_TAG}
          EOF
